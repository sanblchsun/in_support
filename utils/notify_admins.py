import logging
from aiogram import types
from aiogram import Dispatcher
from aiogram.utils.exceptions import ChatNotFound

from base.sqlighter import SQLighter
from data.config import ADMINS

def is_admin_get_firms(usr_id):
    if usr_id in ADMINS:
        sql_object  = SQLighter("base/db.db")
        list_filtr = sql_object.get_admins_firms(usr_id)
        if list_filtr:
            res = list_filtr[0][0].split(",")
            return res
    return False

async def on_startup_notify(dp: Dispatcher):
    for admin in ADMINS:
        try:
            await dp.bot.send_message(admin, "–ë–æ—Ç –ó–∞–ø—É—â–µ–Ω")
        except ChatNotFound as err:
            logging.exception(f'–û—à–∏–±–∫–∞!!!!!!!{err}')



async def send_messege_to_admin(dp: Dispatcher,
                                     full_name,
                                     e_mail,
                                     firma,
                                     cont_telefon,
                                     description,
                                     priority):

    # html = '<b>–∂–∏—Ä–Ω—ã–π</b>, <strong>–∂–∏—Ä–Ω—ã–π</strong>\
    #         <span class="tg-spoiler">—Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç</span>, <tg-spoiler>—Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç</tg-spoiler>\
    #         <i>–∫—É—Ä—Å–∏–≤</i>, <em>–∫—É—Ä—Å–∏–≤</em>\
    #         <u>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</u>, <ins>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</ins>\
    #         <s>–∑–∞—á–µ—Ä–∫–Ω—É—Ç–æ</s>, <strike>–∑–∞—á–µ—Ä–∫–Ω—É—Ç–æ</strike>, <del>–∑–∞—á–µ—Ä–∫–Ω—É—Ç–æ</del>\
    #         <b>bold <i>italic bold <s>italic bold strikethrough</s> <u>underline italic bold</u></i> bold</b>\
    #         <b>\
    #         bold <i>italic bold <s>italic bold strikethrough\
    #         <span class="tg-spoiler">italic bold strikethrough spoiler</span></s>\
    #         <u>underline italic bold</u></i> bold\
    #         </b>\
    #         <code>–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–¥ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã</code>\
    #         <tg-emoji emoji-id="5368324170671202286">üëç</tg-emoji>\
    #         <pre>\
    #         <code class="language-python">\
    #         –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–¥–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã,\
    #         –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python\
    #         </code>\
    #         </pre>\
    #         <a href="tg://user?id=123456789">–≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</a>\
    #         <pre>–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–¥–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã</pre>'

    for admin in ADMINS:
        res_for_if = is_admin_get_firms(admin)
        if res_for_if:
            for pattern in res_for_if:
                pattern_tmp = str(pattern).lower().strip()
                firma_tmp = str(firma).lower().strip()
                if pattern_tmp in firma_tmp:
                    html = \
                        f"<i><b>–ö–æ–º–ø–∞–Ω–∏—è: </b></i>\n<code>{firma}</code>\n" \
                        f"<i><b>–§–∞–º–∏–ª–∏—è –ò–º—è: </b></i>\n<code>{full_name}</code>\n" \
                        f"<i><b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: </b>\n</i><code>{cont_telefon}</code>\n" \
                        f"<i><b>E-mail –∞–¥—Ä–µ—Å: </b></i>\n<code>{e_mail}</code>\n" \
                        f"<i><b>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: </b></i>\n<code>{description}</code>\n" \
                        f"<i><b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞—è–≤–∫–∏: </b></i>\n<code>{priority}</code>\n"

                    await dp.bot.send_message(admin, html, parse_mode=types.ParseMode.HTML)
                    logging.info(f'html: send, pattern_tmp: {pattern_tmp}, firma_tmp: {firma_tmp}, admin: {admin}, ADMINS: {ADMINS}')


